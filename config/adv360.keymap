/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
        #include "macros.dtsi"
        lh_hm: left_hand_home_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <500>;// <---[[produces tap if held longer than tapping-term-ms]]
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 57 60 61 62 63 64 65 74 75 76 77 78 79 80 81>;
        };
        rh_hm: right_hand_home_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <500>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 54 66 67 68 69 70 71 72 73>;
        };
        pd0: prog_dvorak_zero_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd0";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp EXCLAMATION>,
                <&kp N0>;
        };
        pd9: prog_dvorak_nine_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd9";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp PLUS>,
                <&kp N9>;
        };
        pd8: prog_dvorak_eight_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd8";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_BRACE>,
                <&kp N8>;
        };
        pd7: prog_dvorak_seven_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd7";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp N7>;
        };
        pd6: prog_dvorak_six_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd6";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_BRACKET>,
                <&kp N6>;
        };
        pd5: prog_dvorak_five_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd5";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp N5>;
        };
        pd4: prog_dvorak_four_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd4";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp N4>;
        };
        pd3: prog_dvorak_three_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd3";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp LBRC>,
                <&kp N3>;
        };
        pd2: prog_dvorak_two_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd2";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp EQUAL>,
                <&kp N2>;
        };
        pd1: prog_dvorak_one_def {
            compatible = "zmk,behavior-mod-morph";
            label = "pd1";
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
            bindings =
                <&kp DOLLAR>,
                <&kp N1>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &kp ESC           &pd1          &pd2           &pd3    &pd4      &pd5          &tog 1            &mo 2            &pd6       &pd7       &pd8       &pd9       &pd0      &kp MINUS
        &kp TAB     &kp SEMICOLON        &kp COMMA         &kp DOT                       &kp P                   &kp Y           &none            &none                    &kp F                        &kp G                  &kp C           &kp R                  &kp L  &kp BACKSLASH
       &kp CAPS    &lh_hm LSHFT A   &lh_hm LCTRL O   &lh_hm LALT E               &lh_hm LGUI U                   &kp I           &none         &kp LGUI                &kp LCTRL                                                           &kp RCTRL               &kp RGUI          &none      &kp D  &rh_hm RGUI H  &rh_hm RALT T  &rh_hm RCTRL N  &rh_hm RSHFT S          &kp SQT
 &kp LEFT_SHIFT         &kp MINUS            &kp Q           &kp J                       &kp K                   &kp X           &none            &none           &kp LEFT_ARROW                        &none                  &none       &kp PG_UP                  &none          &none      &kp B          &kp M          &kp W           &kp V           &kp Z  &kp RIGHT_SHIFT
          &mo 1         &kp LCTRL     &kp LEFT_ALT   &kp AMPERSAND                       &none                &kp BSPC  &macro_ctrl_up  &kp RIGHT_ARROW                &kp PG_DN                    &kp ENTER              &kp SPACE           &none              &kp SLASH  &kp RIGHT_ALT  &kp GRAVE         &tog 1
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2          &kp F3          &kp F4           &kp F5           &kp F6  &tog 1   &mo 3  &kp F7  &kp F8        &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans          &trans    &kp UP_ARROW           &trans           &trans   &none   &none  &trans  &trans  &kp UP_ARROW   &trans   &trans   &trans
 &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW           &trans   &to 3  &trans  &trans                         &trans   &trans    &none  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
 &trans  &trans          &trans          &trans           &trans           &trans   &none   &none  &trans   &none         &none   &trans    &none    &none  &trans          &trans          &trans           &trans  &trans  &trans
 &trans  &trans          &trans          &trans           &trans  &macro_goto_ide  &trans  &trans  &trans  &trans        &trans   &trans   &trans   &trans  &trans          &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                   &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none             &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
 &trans         &none         &none         &none         &none            &none  &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                   &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG              &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_GAME {
            bindings = <
 &trans  &trans          &trans          &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans          &trans    &kp UP_ARROW           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans           &kp Z           &kp X            &kp C  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &to 0  &trans          &trans          &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_SHIFT {
            bindings = <
    &trans          &kp N1         &kp N2            &kp N3  &kp N4  &kp N5  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
    &trans       &kp COLON  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans          &trans         &trans            &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DOUBLE_QUOTES
 &sk LSHFT  &kp UNDERSCORE         &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &sk RSHFT
    &trans          &trans         &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
